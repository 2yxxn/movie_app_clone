{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iSAqCeA,MAjCf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAGK,UAAU,iBAAb,UAA+BH,EAAQM,MAAM,EAAG,KAAhD,SACA,oBAAIH,UAAU,gBAAd,SACKD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBN,UAAU,gBAA1B,SACKK,GADIC,eCkDlBC,G,kNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,yEADvC,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,uDAOZ,WAEEQ,KAAKN,c,oBAGP,WAAU,IAAD,EACqBM,KAAKT,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAElB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEEC,GAAMD,EAAMC,GACZxB,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAME,mBAChBrB,OAAUmB,EAAMnB,QANTmB,EAAMC,e,GAhCXE,IAAMC,YCPxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.19534e9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres__genre\">\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n/*\r\nprops 체크\r\n항상 propTypes으로 이름지어야 함\r\n*/\r\n\r\nexport default Movie;","import React from 'react';\n/*\n상단에 위치\nreact가 여기에 jsx가 있는 component를 사용하는 것을 이해함\n*/\nimport axios from 'axios';\nimport Movie from './Movie';\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\n\n// class component\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  // state는 object, 바꾸고 깊은 data를 state에 넣음\n  \n  getMovies = async () => {\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading: false});\n    // == {movies(state):movies(axios), isLoading: false}\n  }\n  // async, await : axios.get이 완료되기까지 시간이 조금 걸려서 자바스크립트에게 기다리라고 알려줌\n  \n  componentDidMount() {\n    // render 다음으로 실행됨\n    this.getMovies();\n  }\n\n  render() {\n    const {isLoading, movies} = this.state;\n    // this.state.isLoading, this.state.movies할 필요 없음\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key = {movie.id}\n                id = {movie.id} \n                year = {movie.year} \n                title = {movie.title} \n                summary = {movie.summary} \n                poster = {movie.medium_cover_image} \n                genres = {movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\n/*\n<Food fav=\"kimchi\" />\ncomponent(Food)에 property(fav)를 value(kimchi)로 준 거임\n*/\n\nexport default App;\n\n/*\n* state 바꾸기\nsetTimeout(() => {\n  this.setState({isLoading: false});\n  // state를 직접적으로 바꾸면 안됨\n  // setState를 사용하지 않으면 새 state와 함께 render function이 호출되지 않을 거임\n\n  this.setState({count: this.state.count + 1});\n  this.setState(current => ({count: current.count - 1}));\n  -> 같은 의미\n}, 6000);\n// delay function(JS) : 6초(6000)후에 isLoading(state)를 false로 바꾸겠다\n\n* {괄호}안에 들어가야 자바스크립트\n\n* map(배열의 함수) : 각 element에 함수를 적용, 항상 return 해야함\n{foodILike.map(dish => (\n  <Food name={dish.name} />\n))}\nmap에 있는 각각은 key값을 필요로 함\n\n* dish => {} 와 dish => ()의 차이!\n{}일 때는 return값을 지정해 주어야 함\n()일 때는 괄호 안의 값이 return값\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n/*\ncomponent : HTML을 반환하는 함수\nreact application는 하나의 component만을 rending해야함\n*/"],"sourceRoot":""}